-- Solara Visual GUI Script 
-- Purely visual, no functions tied to Roblox.

-- Services
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "DNA_GUI"

-- Create main frame
local mainFrame = Instance.new("Frame", gui)
mainFrame.Size = UDim2.new(0, 400, 0, 300)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
mainFrame.Active = true
mainFrame.Draggable = true

local corner = Instance.new("UICorner", mainFrame)
corner.CornerRadius = UDim.new(0, 12)

-- Title
local title = Instance.new("TextLabel", mainFrame)
title.Size = UDim2.new(1, 0, 0, 40)
title.Text = "Rayfield Loader Grow-A-Garden V75"
title.Font = Enum.Font.SourceSansBold
title.TextSize = 24
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1

-- Close Button
local closeBtn = Instance.new("TextButton", mainFrame)
closeBtn.Size = UDim2.new(0, 20, 0, 20)
closeBtn.Position = UDim2.new(1, -45, 0, 5)
closeBtn.Text = "X"
closeBtn.TextScaled = true
closeBtn.TextColor3 = Color3.fromRGB(255, 100, 100)
closeBtn.BackgroundTransparency = 1
closeBtn.MouseButton1Click:Connect(function()
    gui:Destroy()
end)

-- Loading Frame
local loadingFrame = Instance.new("Frame", mainFrame)
loadingFrame.Size = UDim2.new(1, -40, 0, 30)
loadingFrame.Position = UDim2.new(0, 20, 0.5, -15)
loadingFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
loadingFrame.Visible = false
local loadCorner = Instance.new("UICorner", loadingFrame)
loadCorner.CornerRadius = UDim.new(0, 8)

local loadingBar = Instance.new("Frame", loadingFrame)
loadingBar.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
loadingBar.Size = UDim2.new(0, 0, 1, 0)
loadingBar.BorderSizePixel = 0
local barCorner = Instance.new("UICorner", loadingBar)
barCorner.CornerRadius = UDim.new(0, 8)

local loadingText = Instance.new("TextLabel", mainFrame)
loadingText.Position = UDim2.new(0.5, -75, 0.5, 25)
loadingText.Size = UDim2.new(0, 150, 0, 30)
loadingText.Text = ""
loadingText.TextColor3 = Color3.fromRGB(255,255,255)
loadingText.Font = Enum.Font.SourceSansBold
loadingText.TextSize = 20
loadingText.BackgroundTransparency = 1
loadingText.Visible = false

-- Fake Random Loading Function (with hangs)
local function randomLoad(stageName, callback)
    local percent = 0
    loadingText.Text = stageName .. " 0%"
    while percent < 100 do
        local step = math.random(1, 15)
        task.wait(math.random(1, 5) / 10)
        percent = math.min(percent + step, 100)

        loadingBar:TweenSize(UDim2.new(percent/100, 0, 1, 0), "Out", "Quad", 0.3, true)
        loadingText.Text = stageName .. " " .. percent .. "%"

        if math.random(1,10) > 8 then
            task.wait(math.random(2, 8)) -- random hang
        end
    end
    task.wait(0.8)
    callback()
end

-- Shared loading stages
local stages = {"Checking Version", "Downloading Files", "Extracting Assets", "Applying Vulnerabilities"}

local function runStages(doneCallback)
    local function stepStage(index)
        if index > #stages then
            loadingText.Text = "Done!"
            task.wait(1)
            loadingFrame.Visible = false
            loadingText.Visible = false
            doneCallback()
            return
        end
        loadingBar.Size = UDim2.new(0, 0, 1, 0)
        randomLoad(stages[index], function()
            stepStage(index + 1)
        end)
    end
    stepStage(1)
end

-- Menu after load
local function showMenu()
    -- track main loader state
    local mainActive = false
    local extraButtons = {}

    -- Function to make a toggle button
    local function createToggle(name, yPos, requiresMain)
        local optionLabel = Instance.new("TextLabel", mainFrame)
        optionLabel.Size = UDim2.new(0.7, 0, 0, 30)
        optionLabel.Position = UDim2.new(0, 20, yPos, 0)
        optionLabel.Text = name
        optionLabel.TextColor3 = Color3.fromRGB(255,255,255)
        optionLabel.Font = Enum.Font.SourceSansBold
        optionLabel.TextSize = 18
        optionLabel.BackgroundTransparency = 1

        local toggleBtn = Instance.new("TextButton", mainFrame)
        toggleBtn.Size = UDim2.new(0, 70, 0, 25)
        toggleBtn.Position = UDim2.new(0.75, 0, yPos, 2)
        toggleBtn.Text = "OFF"
        toggleBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        local toggleCorner = Instance.new("UICorner", toggleBtn)
        toggleCorner.CornerRadius = UDim.new(0, 8)

        local active = false

        local function setOff()
            active = false
            toggleBtn.Text = "OFF"
            toggleBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        end

        toggleBtn.MouseButton1Click:Connect(function()
            if requiresMain and not mainActive then
                toggleBtn.Text = "LOCKED"
                toggleBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
                task.wait(1)
                setOff()
                return
            end

            if not active then
                active = true
                toggleBtn.Text = "Active"
                toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 0)

                -- Show loading animation
                loadingFrame.Visible = true
                loadingText.Visible = true
                loadingBar.Size = UDim2.new(0, 0, 1, 0)

                runStages(function()
                    -- restore button text after loading
                    toggleBtn.Text = "Active"
                    toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
                end)
            else
                setOff()
            end
        end)

        return {button = toggleBtn, reset = setOff}
    end

    -- Buttons
    local mainLoader = createToggle("Rayfield Main Loader", 0.25, false)
    table.insert(extraButtons, createToggle("Infinite Glimmer", 0.45, true))
    table.insert(extraButtons, createToggle("Dark Pet Spawner", 0.60, true))
    table.insert(extraButtons, createToggle("Freeze Trade", 0.75, true))

    -- track mainActive
    mainLoader.button.MouseButton1Click:Connect(function()
        mainActive = (mainLoader.button.Text == "Active")
        if not mainActive then
            for _,btn in ipairs(extraButtons) do
                btn.reset()
            end
        end
    end)
end

-- Start
loadingFrame.Visible = true
loadingText.Visible = true
randomLoad("Downloading assets", showMenu)
