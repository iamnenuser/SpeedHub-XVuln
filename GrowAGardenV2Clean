-- Solara Visual GUI Script
-- Purely visual, no functions tied to Roblox.

-- Services
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "DNA_GUI"

-- Create main frame
local mainFrame = Instance.new("Frame", gui)
mainFrame.Size = UDim2.new(0, 420, 0, 250)
mainFrame.Position = UDim2.new(0.5, -210, 0.5, -125)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
mainFrame.Visible = true
mainFrame.Active = true
mainFrame.Draggable = true

-- UI Corner
local corner = Instance.new("UICorner", mainFrame)
corner.CornerRadius = UDim.new(0, 12)

-- Title
local title = Instance.new("TextLabel", mainFrame)
title.Size = UDim2.new(1, 0, 0, 40)
title.Text = "Rayfield Loader Grow-A-Garden V78"
title.Font = Enum.Font.SourceSansBold
title.TextSize = 24
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1

-- Close Button
local closeBtn = Instance.new("TextButton", mainFrame)
closeBtn.Size = UDim2.new(0, 20, 0, 20)
closeBtn.Position = UDim2.new(1, -45, 0, 5)
closeBtn.Text = "X"
closeBtn.TextScaled = true
closeBtn.TextColor3 = Color3.fromRGB(255, 100, 100)
closeBtn.BackgroundTransparency = 1
closeBtn.MouseButton1Click:Connect(function()
    gui:Destroy()
end)

-------------------------------------------------------------------
-- Overlay Loading Frame (covers the menu during staged loads)
-------------------------------------------------------------------
local overlayFrame = Instance.new("Frame", mainFrame)
overlayFrame.Size = UDim2.new(1, 0, 1, 0)
overlayFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
overlayFrame.BackgroundTransparency = 0.3
overlayFrame.Visible = false

local loadingFrame = Instance.new("Frame", overlayFrame)
loadingFrame.Size = UDim2.new(1, -40, 0, 30)
loadingFrame.Position = UDim2.new(0, 20, 0.5, -15)
loadingFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
local loadCorner = Instance.new("UICorner", loadingFrame)
loadCorner.CornerRadius = UDim.new(0, 8)

local loadingBar = Instance.new("Frame", loadingFrame)
loadingBar.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
loadingBar.Size = UDim2.new(0, 0, 1, 0)
loadingBar.BorderSizePixel = 0
local barCorner = Instance.new("UICorner", loadingBar)
barCorner.CornerRadius = UDim.new(0, 8)

local loadingText = Instance.new("TextLabel", overlayFrame)
loadingText.Position = UDim2.new(0.5, -75, 0.5, 25)
loadingText.Size = UDim2.new(0, 150, 0, 30)
loadingText.Text = "Loading... 0%"
loadingText.TextColor3 = Color3.fromRGB(255,255,255)
loadingText.Font = Enum.Font.SourceSansBold
loadingText.TextSize = 20
loadingText.BackgroundTransparency = 1

-------------------------------------------------------------------
-- Track menu items (labels + buttons) to hide/show during loading
-------------------------------------------------------------------
local menuItems = {}

local function setMenuVisibility(visible)
    for _, obj in ipairs(menuItems) do
        obj.Visible = visible
    end
end

-------------------------------------------------------------------
-- Randomized Fake Loading Function
-------------------------------------------------------------------
local function randomLoad(stageName, callback)
    setMenuVisibility(false) -- hide buttons during loading
    overlayFrame.Visible = true

    local percent = 0
    loadingText.Text = stageName .. " 0%"
    while percent < 100 do
        local step = math.random(1, 15)
        task.wait(math.random(1, 5) / 10)
        percent = math.min(percent + step, 100)

        loadingBar:TweenSize(UDim2.new(percent/100, 0, 1, 0), "Out", "Quad", 0.4, true)
        loadingText.Text = stageName .. " " .. percent .. "%"

        -- random hang
        if math.random(1,10) > 8 then
            task.wait(math.random(2, 8))
        end
    end
    task.wait(math.random(1, 3)) -- settle pause

    overlayFrame.Visible = false
    setMenuVisibility(true) -- show buttons again
    callback()
end

-------------------------------------------------------------------
-- Menu After Load
-------------------------------------------------------------------
local function showMenu()
    overlayFrame.Visible = false

    -- Buttons List
    local options = {
        "Rayfield Main Loader",
        "Infinite Glimmer",
        "Dark Pet Spawner",
        "Freeze Trade"
    }

    local toggles = {}
    local states = {}
    local rayfieldEnabled = false

    for i, name in ipairs(options) do
        local label = Instance.new("TextLabel", mainFrame)
        label.Size = UDim2.new(0.6, 0, 0, 30)
        label.Position = UDim2.new(0, 20, 0.3 + (i-1)*0.15, 0)
        label.Text = name
        label.TextColor3 = Color3.fromRGB(255,255,255)
        label.Font = Enum.Font.SourceSansBold
        label.TextSize = 20
        label.BackgroundTransparency = 1
        table.insert(menuItems, label)

        local toggleBtn = Instance.new("TextButton", mainFrame)
        toggleBtn.Size = UDim2.new(0, 100, 0, 30)
        toggleBtn.Position = UDim2.new(0.7, 0, 0.3 + (i-1)*0.15, 0)
        toggleBtn.Text = "OFF"
        toggleBtn.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
        local toggleCorner = Instance.new("UICorner", toggleBtn)
        toggleCorner.CornerRadius = UDim.new(0, 8)
        table.insert(menuItems, toggleBtn)

        states[name] = false
        toggles[name] = toggleBtn

        toggleBtn.MouseButton1Click:Connect(function()
            -- Other buttons require Rayfield Main Loader first
            if name ~= "Rayfield Main Loader" and not rayfieldEnabled then
                toggleBtn.Text = "Enable Loader!"
                toggleBtn.BackgroundColor3 = Color3.fromRGB(150, 150, 0)
                task.wait(1.5)
                toggleBtn.Text = "OFF"
                toggleBtn.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
                return
            end

            if states[name] == false then
                -- turn ON
                states[name] = true
                toggleBtn.Text = "ACTIVE"
                toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 0)

                -- staged loading with hidden buttons
                local stages = {"Connecting to Server", "Checking Roblox Version", "Downloading Exploit Assets", "Extracting Assets", "Applying Settings"}

                local function runStages(index)
                    if index > #stages then
                        loadingText.Text = "Done!"
                        task.wait(1)
                        overlayFrame.Visible = false
                        setMenuVisibility(true)

                        if name == "Rayfield Main Loader" then
                            rayfieldEnabled = true
                        end
                        return
                    end

                    loadingBar.Size = UDim2.new(0, 0, 1, 0)
                    randomLoad(stages[index], function()
                        runStages(index + 1)
                    end)
                end

                runStages(1)
            else
                -- turn OFF
                states[name] = false
                toggleBtn.Text = "OFF"
                toggleBtn.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
                if name == "Rayfield Main Loader" then
                    rayfieldEnabled = false
                end
            end
        end)
    end
end

-- Start main loader
overlayFrame.Visible = true
randomLoad("Downloading assets", showMenu)
